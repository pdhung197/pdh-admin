{"version":3,"sources":["useTranslation/withTranslation.tsx","pages/PublicViews/ChangePass.tsx","configs/links.ts","helpers/common.ts","configs/routes.tsx","pages/PublicViews/SignIn.tsx","pages/PublicViews/SignUp.tsx","pages/PublicViews/ResetPass.tsx","pages/AuthViews/Dashboard.tsx","pages/AuthViews/AppsPage/ContactPage/UserGrid.tsx","pages/AuthViews/AppsPage/ContactPage/UserList.tsx","pages/AuthViews/AppsPage/ContactPage/UserProfile.tsx","pages/AuthViews/AppsPage/Ecommerce/Products.tsx","pages/AuthViews/AppsPage/Ecommerce/ProductDetail.tsx","pages/AuthViews/FormPage/BasicThings.tsx","pages/AuthViews/FormPage/ValidationForms.tsx","pages/AuthViews/FormPage/WizardPage.tsx","pages/AuthViews/TablePage/BasicTables.tsx","pages/AuthViews/TablePage/DataTables.tsx","pages/AuthViews/TablePage/EditableTables.tsx","Components/Breadcrumb/Breadcrumb.tsx","Components/Footer/Footer.tsx","Localize/Translation/lang.ts","Localize/Translation/en/index.ts","Localize/Translation/en/common.ts","Localize/Translation/vi/index.ts","Localize/Translation/vi/common.ts","useTranslation/helpers/common.ts","useTranslation/translationContext.ts","useTranslation/Trans.tsx","useTranslation/useTranslation.ts","Components/LanguageSelector/LanguageSelector.tsx","configs/routeGroups.ts","Components/TopNav/TopNav.tsx","Containers/Header/Header.tsx","Containers/NavSide/NavSide.tsx","Containers/SettingSide/SettingSide.tsx","Containers/Layouts/AuthLayout.tsx","helpers/routeFnc.ts","Components/FallBack/FallBack.tsx","Components/NotFound/NotFound.tsx","Components/Routing/Routing.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RederingComponent","ChangePass","links","defaultPath","process","authRoutes","path","accessLevel","component","to","routeKey","routeLabel","redirect","adminRoutes","pageRoutes","exact","appRoutes","child","formRoutes","tableRoutes","privateRoutes","publicRoutes","Breadcrumb","Footer","lang","en","common","route","dashboard","about","signIn","signUp","forgetPass","changePass","contactPage","userGrid","userList","userProfile","ecommercePage","products","productDetail","forms","basicForm","validationForm","wizardPage","tablePage","basicTable","dataTables","editableTable","appGroup","componentGroup","authGroup","adminGroup","adminView","vi","langOptions","defaultLanguage","regexGetTextsBetweenDoubleBracket","regexGetFirstTextBetweenBracket","getResultFormatted","text","resultTormat","split","map","tx","textMatch","match","keyOrOption","trim","key","option","result","length","toUpperCase","toLowerCase","Date","parse","dayjs","error","console","log","resultFormatting","join","getObjectWithKey","object","Object","keys","slice","TranslationContext","createContext","userLanguage","handleChangeUserLanguage","selectedLanguage","Trans","transKey","t","format","RenderingComponent","components","loadedLanguage","useContext","transContent","useTranslation","nameSpace","languageKey","setLanguage","nextLanguage","getLanguage","LanguageSelector","useEffect","defaultLang","window","localStorage","getItem","navigator","language","substring","name","id","onChange","e","target","value","langOptionKey","index","pageGroup","title","routes","TopNav","React","memo","renderGroups","generateNavLinks","groupRoutes","groupRoute","Fragment","style","padding","values","group","Header","NavSide","SettingSide","AuthLayout","children","date","onClick","flattenRoutesGroup","reduce","flatRoutes","otherRouteOptions","push","FallBack","NotFound","createManualRoute","render","PrivateRouting","flattenRoutes","from","Routing","App","props","useState","setUserLanguage","provider","newLanguage","setItem","Provider","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.65ed55d6.chunk.js","sourcesContent":["import React, { ComponentClass, FunctionComponent, useState } from 'react';\nimport { defaultLanguage, lang, langOptions } from '../Localize/Translation/lang';\nimport { TranslationContext } from './translationContext';\n\nexport const withTranslation = (RederingComponent: FunctionComponent | ComponentClass<any>) => (\n  props: any\n) => {\n  const [userLanguage, setUserLanguage] = useState(defaultLanguage);\n\n  const provider = {\n    userLanguage,\n    lang: lang[userLanguage],\n    handleChangeUserLanguage: (selectedLanguage: string) => {\n      const newLanguage = langOptions[selectedLanguage] ? selectedLanguage : defaultLanguage;\n      setUserLanguage(newLanguage);\n      window.localStorage.setItem('dv-language', newLanguage);\n    },\n  };\n\n  return (\n    <TranslationContext.Provider value={provider}>\n      <RederingComponent {...props} />\n    </TranslationContext.Provider>\n  );\n};\n","import React from 'react';\n\nexport const ChangePass = () => {\n  return <div>Change pass page</div>;\n};\n","export const links = {\n  home: '/',\n  about: '/about',\n  authenticationCallback: '/auth/callback',\n  signIn: '/signin',\n  signUp: '/signup',\n  resetPass: '/forgetpass',\n  changePass: '/admin/changepass',\n};\n","import dayjs from 'dayjs';\nimport { FormatType } from '../useTranslation/models/Translation';\n\nexport const defaultPath = process.env.PUBLIC_URL;\n\nconst regexGetTextsBetweenDoubleBracket = /\\{(.*?\\}*)\\}/g;\nconst regexGetFirstTextBetweenBracket = /\\{(.*?\\}*)\\}/;\n\nconst resultFormatting = (result: any, option: string): any => {\n  try {\n    if (!option || !option.length) return result;\n\n    if (option === 'uppercase') return (result as string).toUpperCase();\n\n    if (option === 'lowercase') return (result as string).toLowerCase();\n\n    if (Date.parse(result)) return dayjs(result, option); // format(new Date(result), option) || '';\n\n    return result;\n  } catch (error) {\n    console.log({ error });\n    return '';\n  }\n};\n\nexport const getResultFormatted = (text: string, resultTormat: FormatType): string => {\n  const textSplit = (text.split(regexGetTextsBetweenDoubleBracket) || []).map((tx: string) => {\n    const textMatch = tx.match(regexGetFirstTextBetweenBracket);\n    if (!textMatch) return tx;\n    const [key, option] = textMatch[1].split(',').map((keyOrOption) => keyOrOption.trim());\n\n    return resultFormatting(resultTormat[key], option) || '';\n  });\n\n  return textSplit.join('');\n};\n\nexport const getObjectWithKey = (object: any, key: string, resultTormat?: FormatType): any => {\n  if (!(object instanceof Object)) return null;\n  if (!Object.keys(object).length) return null;\n  const keys = key.split('.');\n\n  const result =\n    keys.length - 1 ? getObjectWithKey(object[keys[0]], keys.slice(1).join('.')) : object[key];\n  if (resultTormat && typeof result === 'string') return getResultFormatted(result, resultTormat);\n  return result;\n};\n","import { ChangePass } from '../pages/PublicViews/ChangePass';\nimport { ResetPass } from '../pages/PublicViews/ResetPass';\nimport { SignIn } from '../pages/PublicViews/SignIn';\nimport { SignUp } from '../pages/PublicViews/SignUp';\nimport { Dashboard } from '../pages/AuthViews/Dashboard';\nimport { RouteTyping } from '../Models/Route';\nimport { UserGrid } from '../pages/AuthViews/AppsPage/ContactPage/UserGrid';\nimport { UserList } from '../pages/AuthViews/AppsPage/ContactPage/UserList';\nimport { UserProfile } from '../pages/AuthViews/AppsPage/ContactPage/UserProfile';\nimport { Products } from '../pages/AuthViews/AppsPage/Ecommerce/Products';\nimport { ProductDetail } from '../pages/AuthViews/AppsPage/Ecommerce/ProductDetail';\nimport { BasicThings } from '../pages/AuthViews/FormPage/BasicThings';\nimport { ValidationForms } from '../pages/AuthViews/FormPage/ValidationForms';\nimport { WizardPage } from '../pages/AuthViews/FormPage/WizardPage';\nimport { BasicTables } from '../pages/AuthViews/TablePage/BasicTables';\nimport { DataTables } from '../pages/AuthViews/TablePage/DataTables';\nimport { EditableTables } from '../pages/AuthViews/TablePage/EditableTables';\nimport { defaultPath } from '../helpers/common';\n\nexport const authRoutes: RouteTyping[] = [\n  {\n    path: defaultPath + '/signin',\n    accessLevel: 'public',\n    component: SignIn,\n    routeKey: 'common.route.signIn',\n    routeLabel: 'Sign in',\n  },\n  {\n    path: defaultPath + '/signup',\n    accessLevel: 'public',\n    component: SignUp,\n    routeKey: 'common.route.signUp',\n    routeLabel: 'Sign up',\n  },\n  {\n    path: defaultPath + '/forgetpass',\n    accessLevel: 'public',\n    component: ResetPass,\n    routeKey: 'common.route.forgetPass',\n    routeLabel: 'Forget Pass',\n  },\n  {\n    path: defaultPath + '/changepass',\n    accessLevel: 'admin',\n    component: ChangePass,\n    routeKey: 'common.route.changePass',\n    routeLabel: 'Change pass',\n  },\n  {\n    path: defaultPath + '/auth/callback',\n    accessLevel: 'public',\n    redirect: defaultPath + '/dashboard',\n  },\n];\n\nexport const adminRoutes: RouteTyping[] = [\n  {\n    path: defaultPath + '/user/changepass',\n    accessLevel: 'admin',\n    component: ChangePass,\n    routeKey: 'common.route.changePass',\n    routeLabel: 'Change pass',\n  },\n];\n\nexport const pageRoutes: RouteTyping[] = [\n  {\n    path: defaultPath + '/admin/dashboard',\n    accessLevel: 'viewer',\n    component: Dashboard,\n    exact: true,\n    routeKey: 'common.route.dashboard',\n    routeLabel: 'Dash board',\n  },\n];\n\nexport const appRoutes: RouteTyping[] = [\n  {\n    routeKey: 'common.route.contactPage',\n    child: [\n      {\n        path: defaultPath + '/admin/user-grid',\n        component: UserGrid,\n        routeKey: 'common.route.userGrid',\n      },\n      {\n        path: defaultPath + '/admin/user-list',\n        component: UserList,\n        routeKey: 'common.route.userList',\n      },\n      {\n        path: defaultPath + '/admin/profile',\n        component: UserProfile,\n        routeKey: 'common.route.userProfile',\n      },\n    ],\n  },\n  {\n    routeKey: 'common.route.ecommercePage',\n    child: [\n      {\n        path: defaultPath + '/admin/products',\n        component: Products,\n        routeKey: 'common.route.products',\n      },\n      {\n        path: defaultPath + '/admin/product-detail',\n        component: ProductDetail,\n        routeKey: 'common.route.productDetail',\n      },\n    ],\n  },\n];\n\nexport const formRoutes: RouteTyping[] = [\n  {\n    routeKey: 'common.route.forms',\n    child: [\n      {\n        path: defaultPath + '/admin/basic-form',\n        component: BasicThings,\n        routeKey: 'common.route.basicForm',\n      },\n      {\n        path: defaultPath + '/admin/validation-form',\n        component: ValidationForms,\n        routeKey: 'common.route.validationForm',\n      },\n      {\n        path: defaultPath + '/admin/wizard',\n        component: WizardPage,\n        routeKey: 'common.route.wizardPage',\n      },\n    ],\n  },\n];\n\nexport const tableRoutes: RouteTyping[] = [\n  {\n    routeKey: 'common.route.tablePage',\n    child: [\n      {\n        path: defaultPath + '/admin/basic-table',\n        component: BasicTables,\n        routeKey: 'common.route.basicTable',\n      },\n      {\n        path: defaultPath + '/admin/data-table',\n        component: DataTables,\n        routeKey: 'common.route.dataTables',\n      },\n      {\n        path: defaultPath + '/admin/editable-table',\n        component: EditableTables,\n        routeKey: 'common.route.editableTable',\n      },\n    ],\n  },\n];\n\nexport const privateRoutes: RouteTyping[] = [\n  ...pageRoutes,\n  ...appRoutes,\n  ...formRoutes,\n  ...tableRoutes,\n];\nexport const publicRoutes: RouteTyping[] = [...authRoutes];\n\nexport const routes: RouteTyping[] = [...privateRoutes, ...publicRoutes, ...adminRoutes];\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { links } from '../../configs/links';\n\nexport const SignIn = () => {\n  return (\n    <div>\n      <p>Sign in page</p>\n      <Link to={links.authenticationCallback}>Login done</Link>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const SignUp = () => {\n  return <div>Sign up page</div>;\n};\n","import React from 'react';\n\nexport const ResetPass = () => {\n  return <div>Reset pass page</div>;\n};\n","import React from 'react';\n\nexport const Dashboard = () => {\n  return <div>Dashboard page - Home page</div>;\n};\n","import React from 'react';\n\nexport const UserGrid = () => {\n  return <div>Users grid page</div>;\n};\n","import React from 'react';\n\nexport const UserList = () => {\n  return <div>User list page</div>;\n};\n","import React from 'react';\n\nexport const UserProfile = () => {\n  return <div>User profile</div>;\n};\n","import React from 'react';\n\nexport const Products = () => {\n  return <div>Products page</div>;\n};\n","import React from 'react';\n\nexport const ProductDetail = () => {\n  return <div>Product detail page</div>;\n};\n","import React from 'react';\n\nexport const BasicThings = () => {\n  return <div>Basic form elements page</div>;\n};\n","import React from 'react';\n\nexport const ValidationForms = () => {\n  return <div>Validation forms</div>;\n};\n","import React from 'react';\n\nexport const WizardPage = () => {\n  return <div>Wildzard page</div>;\n};\n","import React from 'react';\n\nexport const BasicTables = () => {\n  return <div>Basic tables</div>;\n};\n","import React from 'react';\n\nexport const DataTables = () => {\n  return <div>Data tables</div>;\n};\n","import React from 'react';\n\nexport const EditableTables = () => {\n  return <div>Editable tables</div>;\n};\n","import React from 'react';\n\nexport const Breadcrumb = () => {\n  return <div>Breadcrumb</div>;\n};\n","import React from 'react';\n\nexport const Footer = () => {\n  return <footer>Component footer</footer>;\n};\n","import { vi } from './vi/index';\nimport { en } from './en/index';\n\nexport type Lang = {\n  [key: string]: any;\n};\n\nexport type LangOption = {\n  [key: string]: string;\n};\n\nexport const lang: Lang = {\n  en,\n  vi,\n};\n\nexport const langOptions: LangOption = {\n  en: 'English',\n  vi: 'Tiếng Việt',\n};\n\nexport const fallBackLanguage = 'en';\n\nexport const defaultLanguage = 'en';\n","import { common } from './common';\nexport const en = {\n  common,\n};\n","export const common = {\n  route: {\n    dashboard: 'Dash board',\n    about: 'About',\n    signIn: 'Sign in',\n    signUp: 'Sign up',\n    forgetPass: 'Forget pass',\n    changePass: 'Change pass',\n    contactPage: 'Contact',\n    userGrid: 'User grid',\n    userList: 'User list',\n    userProfile: 'User profile',\n    ecommercePage: 'Ecommerce',\n    products: 'Products',\n    productDetail: 'Product detail',\n    forms: 'Forms',\n    basicForm: 'Basic forms',\n    validationForm: 'Validation forms',\n    wizardPage: 'Wizard',\n    tablePage: 'Tables',\n    basicTable: 'Basic tables',\n    dataTables: 'Database tables',\n    editableTable: 'Editable tables',\n    appGroup: 'App',\n    componentGroup: 'Components',\n    authGroup: 'Auth pages',\n    adminGroup: 'Admin',\n  },\n  adminView: 'This is admin view {{text, lowercase}} and {{num}} and {{date, dd/MM/yyyy HH:mm}}',\n};\n","import { common } from './common';\nexport const vi = {\n  common,\n};\n","export const common = {\n  route: {\n    dashboard: 'Tổng hợp',\n    about: 'Thông tin',\n    signIn: 'Đăng nhập',\n    signUp: 'Đăng ký',\n    forgetPass: 'Lấy lại mật khẩu',\n    changePass: 'Thay đổi mật khẩu',\n    contactPage: 'Liên lạc',\n    userGrid: 'Dạng lưới',\n    userList: 'Dạng danh sách',\n    userProfile: 'Chi tiết người dùng',\n    ecommercePage: 'Thương mại điện tử',\n    products: 'Sản phẩm',\n    productDetail: 'Chi tiết sản phẩm',\n    forms: 'Biểu mẫu',\n    basicForm: 'Biểu mẫu cơ bản',\n    validationForm: 'Biểu mẫu phê chuẩn',\n    wizardPage: 'Wizard',\n    tablePage: 'Bảng',\n    basicTable: 'Bảng cơ bản',\n    dataTables: 'Bảng dữ liệu',\n    editableTable: 'Bảng sửa đổi',\n    appGroup: 'Ứng dụng',\n    componentGroup: 'Thành phần',\n    authGroup: 'Biểu mẫu xác thực',\n    adminGroup: 'Quản trị',\n  },\n  adminView: 'Đây là view admin',\n};\n","import dayjs from 'dayjs';\nimport { FormatType } from '../models/Translation';\n\nconst regexGetTextsBetweenDoubleBracket = /\\{(.*?\\}*)\\}/g;\nconst regexGetFirstTextBetweenBracket = /\\{(.*?\\}*)\\}/;\n\nconst resultFormatting = (result: any, option: string): any => {\n  try {\n    if (!option || !option.length) return result;\n\n    if (option === 'uppercase') return (result as string).toUpperCase();\n\n    if (option === 'lowercase') return (result as string).toLowerCase();\n\n    if (Date.parse(result)) return dayjs(result, option); // format(new Date(result), option) || '';\n\n    return result;\n  } catch (error) {\n    console.log({ error });\n    return '';\n  }\n};\n\nexport const getResultFormatted = (text: string, resultTormat: FormatType): string => {\n  const textSplit = (text.split(regexGetTextsBetweenDoubleBracket) || []).map((tx: string) => {\n    const textMatch = tx.match(regexGetFirstTextBetweenBracket);\n    if (!textMatch) return tx;\n    const [key, option] = textMatch[1].split(',').map((keyOrOption) => keyOrOption.trim());\n\n    return resultFormatting(resultTormat[key], option) || '';\n  });\n\n  return textSplit.join('');\n};\n\nexport const getObjectWithKey = (object: any, key: string, resultTormat?: FormatType): any => {\n  if (!(object instanceof Object)) return null;\n  if (!Object.keys(object).length) return null;\n  const keys = key.split('.');\n\n  const result =\n    keys.length - 1 ? getObjectWithKey(object[keys[0]], keys.slice(1).join('.')) : object[key];\n  if (resultTormat && typeof result === 'string') return getResultFormatted(result, resultTormat);\n  return result;\n};\n","import { createContext } from 'react';\nimport { defaultLanguage, lang } from '../Localize/Translation/lang';\n\nexport const TranslationContext = createContext({\n  userLanguage: defaultLanguage,\n  lang: lang[defaultLanguage],\n  handleChangeUserLanguage: (selectedLanguage: string) => {\n    console.log({ selectedLanguage });\n  },\n});\n","import React, { useContext } from 'react';\nimport { getObjectWithKey } from './helpers/common';\nimport { TransProps } from './models/Translation';\nimport { TranslationContext } from './translationContext';\n\nexport const Trans = ({ t: transKey, format, components: RenderingComponent }: TransProps) => {\n  const { lang: loadedLanguage } = useContext(TranslationContext);\n\n  const transContent = getObjectWithKey(loadedLanguage, transKey, format) || transKey;\n\n  if (!RenderingComponent) return transContent;\n\n  return <RenderingComponent>{transContent}</RenderingComponent>;\n};\n","import { useContext } from 'react';\nimport { getObjectWithKey } from './helpers/common';\nimport { FormatType } from './models/Translation';\nimport { TranslationContext } from './translationContext';\n\nexport const useTranslation = (nameSpace?: string) => {\n  const { lang: loadedLanguage, userLanguage, handleChangeUserLanguage } = useContext(\n    TranslationContext\n  );\n\n  const t = (transKey: string, format?: FormatType) => {\n    const languageKey = `${nameSpace ? nameSpace + '.' : ''}${transKey}`;\n\n    return getObjectWithKey(loadedLanguage, languageKey, format) || languageKey;\n  };\n\n  const setLanguage = (nextLanguage: string) => handleChangeUserLanguage(nextLanguage);\n\n  const getLanguage = (): string => userLanguage;\n\n  return {\n    t,\n    setLanguage,\n    getLanguage,\n  };\n};\n","import React, { useEffect } from 'react';\nimport { langOptions } from '../../Localize/Translation/lang';\nimport { useTranslation } from '../../useTranslation';\n\nexport const LanguageSelector = () => {\n  const { getLanguage, setLanguage } = useTranslation();\n\n  const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) =>\n    setLanguage(e.target.value);\n\n  useEffect(() => {\n    let defaultLang = window.localStorage.getItem('dv-language');\n    if (!defaultLang) defaultLang = window.navigator.language.substring(0, 2);\n\n    setLanguage(defaultLang);\n  }, [setLanguage]);\n\n  return (\n    <select\n      name=\"languageSelector\"\n      id=\"languageSelector\"\n      onChange={handleSelectChange}\n      value={getLanguage()}\n    >\n      {Object.keys(langOptions).map((langOptionKey, index) => (\n        <option key={index} value={langOptionKey}>\n          {langOptions[langOptionKey]}\n        </option>\n      ))}\n    </select>\n  );\n};\n","import { RouteGroup } from '../Models/Route';\nimport { pageRoutes, authRoutes, appRoutes, formRoutes, tableRoutes, adminRoutes } from './routes';\n\nexport const pageGroup: RouteGroup = {\n  title: '',\n  routes: pageRoutes,\n};\n\nexport const appGroup: RouteGroup = {\n  title: 'common.route.appGroup',\n  routes: appRoutes,\n};\n\nexport const componentGroup: RouteGroup = {\n  title: 'common.route.componentGroup',\n  routes: [...formRoutes, ...tableRoutes],\n};\n\nexport const authGroup: RouteGroup = {\n  title: 'common.route.authGroup',\n  routes: authRoutes,\n};\n\nexport const adminGroup: RouteGroup = {\n  title: 'common.route.adminGroup',\n  routes: adminRoutes,\n};\n","import React, { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  adminGroup,\n  appGroup,\n  authGroup,\n  componentGroup,\n  pageGroup,\n} from '../../configs/routeGroups';\nimport { defaultPath } from '../../helpers/common';\nimport { PrivateRouteType, RouteGroup, RouteTyping } from '../../Models/Route';\nimport { useTranslation } from '../../useTranslation';\n\nexport const TopNav = React.memo(({ accessLevel }: PrivateRouteType) => {\n  const { t } = useTranslation();\n\n  const renderGroups =\n    accessLevel === 'viewer' ? [pageGroup, appGroup, authGroup, componentGroup] : [adminGroup];\n\n  const generateNavLinks = (groupRoutes: RouteTyping[]): ReactNode[] =>\n    (groupRoutes || []).map((groupRoute: RouteTyping, index: number) => {\n      const { path, routeKey, child } = groupRoute;\n      if (!routeKey) return null;\n\n      return (\n        <React.Fragment key={index + routeKey}>\n          <div>\n            {path ? <Link to={path}>{t(routeKey)}</Link> : <span>{t(routeKey)}</span>}\n            {child ? ' >' : ''}\n          </div>\n          {child && generateNavLinks(child)}\n        </React.Fragment>\n      );\n    });\n\n  return (\n    <nav style={{ padding: 20 }}>\n      {Object.values(renderGroups).map((group: RouteGroup, index: number) => {\n        const { title, routes } = group;\n        if (!routes || !routes.length) return null;\n\n        return (\n          <React.Fragment key={index}>\n            {title && <h3>{t(title)}</h3>}\n            {generateNavLinks(routes)}\n          </React.Fragment>\n        );\n      })}\n      <div>\n        <Link to={`${defaultPath}/abcxyz`}>404</Link>\n      </div>\n    </nav>\n  );\n});\n","import React from 'react';\n\nexport const Header = () => {\n  return <header>Component header</header>;\n};\n","import React from 'react';\nimport { PrivateRouteType } from '../../Models/Route';\n\nexport const NavSide = ({ accessLevel }: PrivateRouteType) => {\n  return <aside>Component nav side</aside>;\n};\n","import React from 'react';\n\nexport const SettingSide = () => {\n  return <aside>Component settings side</aside>;\n};\n","import React, { ReactNode } from 'react';\nimport { Breadcrumb } from '../../Components/Breadcrumb/Breadcrumb';\nimport { Footer } from '../../Components/Footer/Footer';\nimport { LanguageSelector } from '../../Components/LanguageSelector/LanguageSelector';\nimport { TopNav } from '../../Components/TopNav/TopNav';\nimport { PrivateRouteType } from '../../Models/Route';\nimport { Header } from '../Header/Header';\nimport { NavSide } from '../NavSide/NavSide';\nimport { SettingSide } from '../SettingSide/SettingSide';\nimport { useTranslation } from '../../useTranslation';\nimport { Trans } from '../../useTranslation';\n\ninterface LayoutProps extends PrivateRouteType {\n  children: ReactNode;\n}\n\nexport const AuthLayout = ({ children, accessLevel }: LayoutProps) => {\n  const { setLanguage } = useTranslation();\n\n  return (\n    <>\n      <Header />\n      <TopNav accessLevel={accessLevel} />\n      <LanguageSelector />\n      <NavSide accessLevel={accessLevel} />\n      <SettingSide />\n      <main>\n        <Trans\n          t=\"common.adminView\"\n          format={{ text: 'Hưng', date: '09/05/2020 09:05:00' }}\n          components=\"h1\"\n        />\n        <button onClick={() => setLanguage('en')}>Change language</button>\n        <button onClick={() => setLanguage('vi')}>Đổi ngôn ngữ</button>\n        <Breadcrumb />\n        {children}\n      </main>\n      <Footer />\n    </>\n  );\n};\n","import { RouteTyping } from './../Models/Route';\n\nexport const flattenRoutesGroup = (routes: RouteTyping[]): any =>\n  (routes || []).reduce((flatRoutes: RouteTyping[], route) => {\n    const { child, ...otherRouteOptions } = route;\n    flatRoutes.push(otherRouteOptions);\n    if (child) flatRoutes.push(...flattenRoutesGroup(child));\n    return flatRoutes;\n  }, []);\n","import React from 'react';\n\nexport const FallBack = () => {\n  return <p>This component does not load properly</p>;\n};\n","import React from 'react';\n\nexport const NotFound = () => {\n  return <div>404 Page not found</div>;\n};\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { adminRoutes, privateRoutes, publicRoutes } from '../../configs/routes';\nimport { AuthLayout } from '../../Containers/Layouts/AuthLayout';\nimport { defaultPath } from '../../helpers/common';\nimport { flattenRoutesGroup } from '../../helpers/routeFnc';\nimport { PrivateRouteType, RouteTyping } from '../../Models/Route';\nimport { FallBack } from '../FallBack/FallBack';\nimport { NotFound } from '../NotFound/NotFound';\n\nconst createManualRoute = (route: RouteTyping, key: number) => {\n  const { path, exact, redirect, component: RenderingComponent, child } = route;\n\n  if ((!redirect && !RenderingComponent) || child) return null;\n\n  const render = () => {\n    if (redirect) return <Redirect to={redirect} />;\n\n    if (!RenderingComponent) return <FallBack />;\n\n    return <RenderingComponent />;\n  };\n\n  return <Route key={key} path={path} exact={exact} render={render} />;\n};\n\nconst PrivateRouting = ({ accessLevel }: PrivateRouteType) => {\n  const flattenRoutes: RouteTyping[] = flattenRoutesGroup(\n    accessLevel === 'viewer' ? privateRoutes : adminRoutes\n  );\n\n  return (\n    <AuthLayout accessLevel={accessLevel}>\n      <Switch>\n        {Object.values(flattenRoutes).map(createManualRoute)}\n        <Redirect from={`${defaultPath}/admin*`} to={`${defaultPath}/404`} />\n        <Redirect from={`${defaultPath}/user*`} to={`${defaultPath}/404`} />\n      </Switch>\n    </AuthLayout>\n  );\n};\n\nexport const Routing = () => {\n  return (\n    <Switch>\n      {Object.values(publicRoutes).map(createManualRoute)}\n      <Route path={`${defaultPath}/admin`} render={() => <PrivateRouting accessLevel=\"viewer\" />} />\n      <Route path={`${defaultPath}/user`} render={() => <PrivateRouting accessLevel=\"admin\" />} />\n      <Redirect\n        exact\n        from={`${defaultPath}/`}\n        to={`${privateRoutes[0].path}` || `${defaultPath}/`}\n      />\n      <Route path={`${defaultPath}*`} component={NotFound} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Routing } from './Components/Routing/Routing';\nimport { withTranslation } from './useTranslation';\n\nexport const App = withTranslation(() => (\n  <BrowserRouter>\n    <Routing />\n  </BrowserRouter>\n));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin)\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      }\n      // Is not localhost. Just register service worker\n      else registerValidSW(swUrl, config);\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) return;\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed')\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) config.onUpdate(registration);\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) config.onSuccess(registration);\n            }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      )\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      else registerValidSW(swUrl, config);\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator)\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}